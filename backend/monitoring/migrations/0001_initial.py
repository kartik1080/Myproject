# Generated by Django 4.2.7 on 2025-08-31 10:14

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('detection', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CollectedContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('message', 'Message'), ('post', 'Post'), ('comment', 'Comment'), ('story', 'Story'), ('media', 'Media'), ('metadata', 'Metadata')], max_length=20)),
                ('content_id', models.CharField(max_length=255)),
                ('content_text', models.TextField(blank=True)),
                ('content_url', models.URLField(blank=True)),
                ('user_id', models.CharField(blank=True, max_length=255)),
                ('username', models.CharField(blank=True, max_length=255)),
                ('user_metadata', models.JSONField(blank=True, default=dict)),
                ('channel_id', models.CharField(blank=True, max_length=255)),
                ('channel_name', models.CharField(blank=True, max_length=255)),
                ('is_suspicious', models.BooleanField(default=False)),
                ('confidence_score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('detected_keywords', models.JSONField(blank=True, default=list)),
                ('ml_analysis', models.JSONField(blank=True, default=dict)),
                ('platform_metadata', models.JSONField(blank=True, default=dict)),
                ('location_data', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField()),
                ('collected_at', models.DateTimeField(auto_now_add=True)),
                ('processed', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Collected Content',
                'verbose_name_plural': 'Collected Content',
                'ordering': ['-collected_at'],
            },
        ),
        migrations.CreateModel(
            name='MonitoringMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('telegram_sessions', models.PositiveIntegerField(default=0)),
                ('instagram_sessions', models.PositiveIntegerField(default=0)),
                ('whatsapp_sessions', models.PositiveIntegerField(default=0)),
                ('twitter_sessions', models.PositiveIntegerField(default=0)),
                ('total_content_collected', models.PositiveIntegerField(default=0)),
                ('suspicious_content_found', models.PositiveIntegerField(default=0)),
                ('false_positives', models.PositiveIntegerField(default=0)),
                ('avg_response_time', models.FloatField(default=0.0)),
                ('success_rate', models.FloatField(default=0.0)),
                ('error_rate', models.FloatField(default=0.0)),
                ('cpu_usage', models.FloatField(default=0.0)),
                ('memory_usage', models.FloatField(default=0.0)),
                ('network_usage', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Monitoring Metrics',
                'verbose_name_plural': 'Monitoring Metrics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='MonitoringRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('rule_type', models.CharField(choices=[('keyword_filter', 'Keyword Filter'), ('user_filter', 'User Filter'), ('channel_filter', 'Channel Filter'), ('time_filter', 'Time Filter'), ('content_filter', 'Content Filter')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('conditions', models.JSONField(default=dict)),
                ('actions', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('priority', models.PositiveIntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_executed', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Monitoring Rule',
                'verbose_name_plural': 'Monitoring Rules',
                'ordering': ['-priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PlatformConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('connected', 'Connected'), ('connecting', 'Connecting'), ('disconnected', 'Disconnected'), ('error', 'Error'), ('rate_limited', 'Rate Limited')], default='disconnected', max_length=20)),
                ('last_connected', models.DateTimeField(blank=True, null=True)),
                ('last_disconnected', models.DateTimeField(blank=True, null=True)),
                ('response_time', models.FloatField(blank=True, null=True)),
                ('error_count', models.PositiveIntegerField(default=0)),
                ('rate_limit_remaining', models.PositiveIntegerField(blank=True, null=True)),
                ('rate_limit_reset', models.DateTimeField(blank=True, null=True)),
                ('api_version', models.CharField(blank=True, max_length=20)),
                ('connection_details', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('platform', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='connection', to='detection.platform')),
            ],
            options={
                'verbose_name': 'Platform Connection',
                'verbose_name_plural': 'Platform Connections',
            },
        ),
        migrations.CreateModel(
            name='MonitoringSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('stopped', 'Stopped'), ('error', 'Error'), ('completed', 'Completed')], default='active', max_length=20)),
                ('target_channels', models.JSONField(default=list)),
                ('keywords', models.JSONField(default=list)),
                ('monitoring_interval', models.PositiveIntegerField(default=300)),
                ('max_content_per_session', models.PositiveIntegerField(default=1000)),
                ('content_collected', models.PositiveIntegerField(default=0)),
                ('detections_found', models.PositiveIntegerField(default=0)),
                ('errors_encountered', models.PositiveIntegerField(default=0)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monitoring_sessions', to='detection.platform')),
            ],
            options={
                'verbose_name': 'Monitoring Session',
                'verbose_name_plural': 'Monitoring Sessions',
                'ordering': ['-started_at'],
            },
        ),
    ]
